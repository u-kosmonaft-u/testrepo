---
- hosts: builder
  gather_facts: no
  become: yes
  become_method: sudo
  become_user: root
  vars:
    docker_image_tag: "{{ lookup('env','BUILD_ID') }}"
  tasks:
    - debug: msg="{{ lookup('env','BUILD_ID') }}"

    - name: add vars
      include_vars:
        file: secret.yml

    - name: try to debag my playbook
      shell:
        cmd: echo "{{ docker_image_tag }}"
        chdir: /opt

    - name: create build directory
      file:
        path: /opt/demo-dockerfile
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: copy scr dir
      copy:
        src: ../src
        dest: /opt/demo-dockerfile/src
        owner: root
        group: root
        mode: '0755'

    - name: copy Dockerfile
      copy:
        src: ../requirements.txt
        dest: /opt/demo-dockerfile/requirements.txt
        owner: root
        group: root
        mode: '0644'

    - name: copy Dockerfile
      copy:
        src: ../Dockerfile
        dest: /opt/demo-dockerfile/Dockerfile
        owner: root
        group: root
        mode: '0644'

    - name: build container image
      docker_image:
        name: pythondemo
        tag: "{{ docker_image_tag }}"
        build:
          path: /opt/demo-dockerfile
        state: present

    - name: Log into private registry and force re-authorization
      docker_login:
        registry: nexus.regestry.home:8083
        username: admin
        password: "{{ nexus_password }}"
        reauthorize: yes

    - name: Tag and push to local regestry
      docker_image:
        name: pythondemo
        repository: nexus.regestry.home:8083
        tag: "{{ docker_image_tag }}"
        source: local
        push: yes

    - name: Remove image from workdir
      docker_image:
        state: absent
        name: nexus.regestry.home:8083/pythondemo
        tag: "{{ docker_image_tag }}"

    - name: delete working directory
      file:
        path: /opt/demo-dockerfile
        state: absent
